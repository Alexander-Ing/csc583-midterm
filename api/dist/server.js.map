{"version":3,"sources":["server.js"],"names":["app","console","log","process","env","secret","SECRET","set","PORT","HOST","use","urlencoded","extended","json","req","res","next","header","get","send","unless","path","require","server","listen","address","port"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,MAAM,wBAAZ;;AAEAC,QAAQC,GAAR,CAAYC,QAAQC,GAApB;AACA,IAAMC,SAASF,QAAQC,GAAR,CAAYE,MAA3B;;AAGAN,IAAIO,GAAJ,CAAQ,MAAR,EAAgBJ,QAAQC,GAAR,CAAYI,IAAZ,IAAoB,IAApC;AACAR,IAAIO,GAAJ,CAAQ,MAAR,EAAgBJ,QAAQC,GAAR,CAAYK,IAAZ,IAAoB,SAApC;;AAEAT,IAAIU,GAAJ,CAAQ,qBAAWC,UAAX,CAAsB,EAAEC,UAAU,KAAZ,EAAtB,CAAR;AACAZ,IAAIU,GAAJ,CAAQ,qBAAWG,IAAX,EAAR;;AAEAb,IAAIU,GAAJ,CAAQ,UAACI,GAAD,EAAMC,GAAN,EAAWC,IAAX,EAAoB;AAC1BD,MAAIE,MAAJ,CAAW,6BAAX,EAA0C,GAA1C;AACAF,MAAIE,MAAJ,CAAW,8BAAX,EAA2C,wBAA3C;AACAF,MAAIE,MAAJ,CACE,8BADF,EAEE,iGAFF;AAGAF,MAAIE,MAAJ,CAAW,kCAAX,EAA+C,MAA/C;AACAD;AACD,CARD;;AAUAhB,IAAIkB,GAAJ,CAAQ,GAAR,EAAa,UAACJ,GAAD,EAAMC,GAAN;AAAA,SAAcA,IAAII,IAAJ,CAAS,cAAT,CAAd;AAAA,CAAb;;AAEAnB,IAAIU,GAAJ,CAAQ,QAAR,EAAkB,0BAAW,EAAEL,cAAF,EAAX,EACfe,MADe,CACR,EAAEC,MAAM,CAAC,aAAD,EAAgB,aAAhB,EAA+B,iBAA/B,CAAR,EADQ,CAAlB;;AAGArB,IAAIU,GAAJ,CAAQ,QAAR,EAAkB,0BAAW,EAAEL,cAAF,EAAX,CAAlB;AACAL,IAAIU,GAAJ,CAAQ,OAAR,EAAiB,0BAAW,EAAEL,cAAF,EAAX,CAAjB;;AAGAL,IAAIU,GAAJ,CAAQ,QAAR,EAAkBY,QAAQ,mCAAR,CAAlB;AACAtB,IAAIU,GAAJ,CAAQ,QAAR,EAAkBY,QAAQ,mCAAR,CAAlB;AACAtB,IAAIU,GAAJ,CAAQ,OAAR,EAAiBY,QAAQ,mCAAR,CAAjB;;AAEA,IAAMC,SAASvB,IAAIwB,MAAJ,CAAWxB,IAAIkB,GAAJ,CAAQ,MAAR,CAAX,EAA4BlB,IAAIkB,GAAJ,CAAQ,MAAR,CAA5B,EAA6C;AAAA,SAC1DjB,QAAQC,GAAR,mCAA4CqB,OAAOE,OAAP,GAAiBA,OAA7D,SAAwEF,OAAOE,OAAP,GAAiBC,IAAzF,CAD0D;AAAA,CAA7C,CAAf","file":"server.js","sourcesContent":["import express from 'express';\nimport bodyParser from 'body-parser';\nimport expressJwt from 'express-jwt';\n\nconst app = express();\n\nconsole.log(process.env);\nconst secret = process.env.SECRET;\n\n\napp.set('port', process.env.PORT || 3000);\napp.set('host', process.env.HOST || '0.0.0.0');\n\napp.use(bodyParser.urlencoded({ extended: false }));\napp.use(bodyParser.json());\n\napp.use((req, res, next) => {\n  res.header('Access-Control-Allow-Origin', '*');\n  res.header('Access-Control-Allow-Methods', 'PUT, GET, POST, DELETE');\n  res.header(\n    'Access-Control-Allow-Headers',\n    'Origin, X-Requested-With, Content-Type, Accept, Authorization, Access-Control-Allow-Credentials');\n  res.header('Access-Control-Allow-Credentials', 'true');\n  next();\n});\n\napp.get('/', (req, res) => res.send('Hello World!'));\n\napp.use('/users', expressJwt({ secret })\n  .unless({ path: ['/users/auth', '/users/init', '/users/register'] }));\n\napp.use('/items', expressJwt({ secret }));\napp.use('/info', expressJwt({ secret }));\n\n\napp.use('/users', require('./controllers/users.controller.js'));\napp.use('/items', require('./controllers/items.controller.js'));\napp.use('/info', require('./controllers/infos.controller.js'));\n\nconst server = app.listen(app.get('port'), app.get('host'), () =>\n  console.log(`\\nServer listening at http://${server.address().address}:${server.address().port}`));\n"]}