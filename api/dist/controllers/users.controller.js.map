{"version":3,"sources":["controllers/users.controller.js"],"names":["router","Router","init","req","res","userParam","name","email","password","admin","create","then","status","send","msg","catch","err","authUser","auth","body","obj","token","avatarUrl","avatar","isAdmin","list","json","users","getById","params","_id","registerUser","updateUser","update","deleteUser","delete","get","post","put","module","exports"],"mappings":"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","file":"users.controller.js","sourcesContent":["import express from 'express';\nimport userService from '../services/users.service';\n\nconst router = express.Router();\n\nconst init = (req, res) => {\n  const userParam = {\n    name: 'Admin',\n    email: 'Admin@admin.com',\n    password: 'admin',\n    admin: true };\n\n  userService.create(userParam)\n    .then(msg => res.status(200).send(msg))\n    .catch(err => res.status(400).send(err));\n};\n\nconst authUser = (req, res) => {\n  userService.auth(req.body.email, req.body.password)\n    .then((obj) => {\n      if (obj.token) {\n        res.status(200).send({\n          token: obj.token,\n          name: obj.name,\n          avatarUrl: obj.avatar,\n          isAdmin: obj.isAdmin });\n      } else res.status(401);\n    })\n    .catch(err => res.status(400).send(err));\n};\n\nconst list = (req, res) => {\n  userService.list()\n    .then(users => res.status(200).json(users))\n    .catch(err => res.status(400).send(err));\n};\n\nconst getById = (req, res) => {\n  userService.getById(req.params._id)\n    .then(users => res.status(200).json(users))\n    .catch(err => res.status(400).send(err));\n};\n\nconst registerUser = (req, res) => {\n  userService.create(req.body)\n    .then(msg => res.status(200).send(msg))\n    .catch(err => res.status(400).send(err));\n};\n\nconst updateUser = (req, res) => {\n  userService.update(req.params._id, req.body)\n    .then(msg => res.status(200).send(msg))\n    .catch(err => res.status(400).send(err));\n};\n\nconst deleteUser = (req, res) => {\n  userService.delete(req.params._id)\n    .then(msg => res.status(200).send(msg))\n    .catch(err => res.status(400).send(err));\n};\n\nrouter.get('/init', init);\nrouter.get('/list', list);\nrouter.get('/:_id', getById);\nrouter.post('/auth', authUser);\nrouter.post('/register', registerUser);\nrouter.put('/:_id', updateUser);\nrouter.delete('/:_id', deleteUser);\n\nmodule.exports = router;\n"]}